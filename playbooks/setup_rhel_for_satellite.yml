---
- name: setup server to be satellite or a capsule
  hosts:
    - sat
#    - capsule
  become: true

  vars:
    system_registered: no

  pre_tasks:
    - name: check for RHEL7
      fail:
        msg: "Satellite 6 must be run on a RHEL7 host"
      when:
        - ansible_facts['distribution'] != 'RedHat' or
          ansible_facts['distribution_major_version'] | int != 7

    - name: check for x86_64 architecture
      fail:
        msg: "Satellite 6 requires x86_64 architecture"
      when:
        - ansible_facts['architecture'] != 'x86_64'

    - name: check cpu
      fail:
        msg: "Satellite requires at least 4 cpu cores"
      when:
        - ansible_facts['processor_count'] | int * ansible_facts['processor_count'] | int < 4

    - name: check memory
      fail:
        msg: "Satellite requires at least 20GB of ram"
      when:
        - ansible_facts['memory_mb']['real']['total'] | int < 20480

    - name: get current umask
      shell: umask
      register: current_umask
      changed_when: false
      check_mode: false

    - name: check umask
      fail:
        msg: "system umask must be 0022"
      when:
        - current_umask.stdout != '0022'

    - name: check upstream dns
      shell: ping -c 1 "{{ ansible_fqdn }}"
      register: dns_status
      check_mode: false
      failed_when: false
      changed_when: false

    - name: fail on dns
      fail:
        msg: "upstream dns must be configured"
      when:
        - dns_status.rc | int != 0

    - name: check registration status
      command: subscription-manager identity
      ignore_errors: yes
      register: subscription_status
      changed_when: false
      become: yes

    - name: set subscription status
      set_fact:
        system_registered: yes
        actkey_reg_info: "{{ yes if rhsm_activationkey is defined and rhsm_org_id is defined else no }}"
      when: "'This system is not yet registered' not in subscription_status.stderr"

    - name: check if registration info is defined
      set_fact:
        actkey_reg_info: "{{ 'yes' if rhsm_activationkey is defined and rhsm_org_id is defined else 'no' }}"
        user_reg_info: "{{ 'yes' if rhsm_user is defined and rhsm_pass is defined else 'no' }}"

    - name: fail when system not registered and no registration information is provided
      vars:
        can_register: "{{ 'yes' if user_reg_info or actkey_reg_info else 'no' }}"
      fail:
        msg: "System is not registered. Edit {{ inventory_dir }}/group_vars/sat/main.yml with your registration info"
      #when: not system_registered and ( not actkey_reg_info or not user_reg_info)
      when: not system_registered and not can_register

  tasks:
    - name: ensure system is registered to Red Hat
      include_role:
        name: swygue-redhat-subscription
      when: not system_registered or not is_repos_enabled

    - name: create satellite paritions
      include_role:
        name: swygue-lvm
      when: sat_vg_disk is defined and sat_vg_disk != ''
